# üöÄ DELUXE TOUR & TRAVEL - QUICK START GUIDE

## ‚úÖ STATUS: Node.js Installed Successfully!

Node.js Version: v22.20.0
npm is currently installing all dependencies...

---

## üì¶ WHAT'S HAPPENING NOW:

The command `npm install` is running and installing:
- express (Web framework)
- mongoose (MongoDB ODM)
- bcryptjs (Password hashing)
- jsonwebtoken (JWT authentication)
- dotenv (Environment variables)
- cors (Cross-origin requests)
- helmet (Security headers)
- morgan (Logging)
- multer (File uploads)
- cloudinary (Image hosting)
- stripe (Payment processing)
- nodemailer (Email sending)
- express-validator (Input validation)
- express-rate-limit (Rate limiting)
- nodemon (Auto-restart during development)

This will take 2-3 minutes...

---

## üéØ AFTER INSTALLATION COMPLETES:

### Step 1: Start the Backend Server
```powershell
cd "c:\Users\Afronic\Desktop\Deluxe tour and travel website\backend"
npm run dev
```

The server will start on: **http://localhost:5000**

### Step 2: Open a NEW Terminal and Start Frontend
```powershell
cd "c:\Users\Afronic\Desktop\Deluxe tour and travel website\frontend"
npx http-server -p 3000 -o
```

The frontend will open on: **http://localhost:3000**

---

## üß™ TEST THE AUTHENTICATION API

Once the backend server is running, you can test it!

### Method 1: Using Browser
Visit: http://localhost:5000
You should see: "Welcome to Deluxe Tour & Travel API"

### Method 2: Using PowerShell (curl)
```powershell
# Test API root
curl http://localhost:5000

# Register a new user
curl -X POST http://localhost:5000/api/auth/register `
  -H "Content-Type: application/json" `
  -d '{"name":"Test User","email":"test@example.com","password":"password123"}'

# Login
curl -X POST http://localhost:5000/api/auth/login `
  -H "Content-Type: application/json" `
  -d '{"email":"test@example.com","password":"password123"}'
```

### Method 3: Using Thunder Client / Postman
1. Install Thunder Client extension in VS Code
2. Create new request
3. POST http://localhost:5000/api/auth/register
4. Body (JSON):
```json
{
  "name": "John Doe",
  "email": "john@example.com",
  "password": "password123",
  "phone": "+254700000000"
}
```

---

## ‚ú® WHAT YOU CAN TEST RIGHT NOW:

### Backend APIs Ready:
‚úÖ POST /api/auth/register - Register new user
‚úÖ POST /api/auth/login - Login user
‚úÖ GET /api/auth/me - Get profile (Protected)
‚úÖ PUT /api/auth/profile - Update profile (Protected)
‚úÖ PUT /api/auth/password - Change password (Protected)
‚úÖ POST /api/auth/forgot-password - Request password reset
‚úÖ PUT /api/auth/reset-password/:token - Reset password

### Frontend Ready:
‚úÖ Beautiful homepage
‚úÖ Responsive design
‚úÖ Mobile menu
‚úÖ All sections (hero, tours, destinations, testimonials)

---

## üìÅ PROJECT FILES CREATED:

### Backend (11 files):
1. server.js - Main server file
2. package.json - Dependencies
3. .env - Configuration
4. src/models/User.js - User model
5. src/models/Tour.js - Tour model
6. src/models/Booking.js - Booking model
7. src/models/Review.js - Review model
8. src/models/Contact.js - Contact model
9. src/middleware/auth.js - Authentication middleware
10. src/middleware/validator.js - Validation middleware
11. src/controllers/authController.js - Auth logic
12. src/routes/authRoutes.js - Auth endpoints
13. src/config/database.js - DB connection

### Frontend (5 files):
1. index.html - Homepage
2. css/style.css - Styling
3. js/main.js - JavaScript
4. js/components.js - Component loader
5. includes/header.html - Navigation
6. includes/footer.html - Footer

---

## ‚ö†Ô∏è IMPORTANT NOTES:

### MongoDB Required:
The backend needs MongoDB to work. You have 2 options:

**Option 1: MongoDB Atlas (Cloud - Recommended)**
1. Go to https://www.mongodb.com/cloud/atlas
2. Create free account
3. Create a free cluster
4. Get connection string
5. Update MONGODB_URI in .env file

**Option 2: Local MongoDB**
1. Download from https://www.mongodb.com/try/download/community
2. Install MongoDB Community Edition
3. Start MongoDB service
4. Use connection string: mongodb://localhost:27017/deluxe_tour_travel

---

## üéì LEARNING RESOURCES:

- MongoDB Atlas Tutorial: https://www.mongodb.com/docs/atlas/getting-started/
- Express.js Guide: https://expressjs.com/en/guide/routing.html
- JWT Authentication: https://jwt.io/introduction

---

## üÜò TROUBLESHOOTING:

### If "npm install" fails:
```powershell
npm cache clean --force
npm install
```

### If port 5000 is in use:
Change PORT=5001 in .env file

### If MongoDB connection fails:
Check MONGODB_URI in .env file

### If frontend doesn't load header/footer:
Make sure you're using http-server, not just opening the HTML file

---

## üìä PROGRESS SO FAR:

‚úÖ Project structure created
‚úÖ Node.js installed (v22.20.0)
‚úÖ Backend server configured
‚úÖ 5 database models created
‚úÖ Authentication system complete
‚úÖ Frontend homepage ready
‚úÖ npm dependencies installing...

**Next:** Test the application and continue building!

---

**Student:** Khalid Abdikarim (BSCCS/2023/67547)
**Project:** Deluxe Tour and Travel
**Date:** October 4, 2025
